
@page "/createpayment"
@using System.ComponentModel.DataAnnotations
@using BlazorPaymentManagementApp.Model
@inject NavigationManager NavManager

@inject IJSRuntime JsRuntime

<h3>Add payment</h3>
<EditForm Model="@payment" OnValidSubmit="Create">
    <DataAnnotationsValidator />
    <hr />

    <div class="form-group row">
        <label for="amount" class="col-sm-2 col-form-label">
            Amount
        </label>
        <div class="col-sm-10">
            <InputText id="amount" class="form-control" placeholder="Amount" @bind-Value="AmountToSend" />
            <ValidationMessage For="@(() => payment.Amount)" />
        </div>
    </div>

    <div class="form-group row">
        <label for="currency" class="col-sm-2 col-form-label">
            Currency
        </label>
        <div class="col-sm-10">
            <InputSelect id="currency" class="form-control" @bind-Value="payment.Currency">
                <option>RON(Default)</option>
                @foreach (var currency in currencyList)
                {
<option>@currency</option>}
            </InputSelect>
            <ValidationMessage For="@(() => payment.Currency)" />
        </div>
    </div>

    <div class="form-group row">
        <label for="source" class="col-sm-2 col-form-label">
            Source
        </label>
        <div class="col-sm-10">
            <InputText id="source" class="form-control" placeholder="Source" @bind-Value="payment.Source" />
            <ValidationMessage For="@(() => payment.Source)" />
        </div>
    </div>

    <div class="form-group row">
        <label for="destination" class="col-sm-2 col-form-label">
            Destination
        </label>
        <div class="col-sm-10">
            <InputText id="destination" class="form-control" placeholder="Destination" @bind-Value="payment.Destination" />
            <ValidationMessage For="@(() => payment.Destination)" />
        </div>
    </div>

    <div class="form-group row">
        <label for="status" class="col-sm-2 col-form-label">
            Status
        </label>
        <div class="col-sm-10">
            <InputText id="status" class="form-control" placeholder="Status" @bind-Value="payment.Status" />
            <ValidationMessage For="@(() => payment.Status)" />
        </div>
    </div>

    <input type="submit" value="Submit" />
</EditForm>

@code{ public string AmountToSend { get; set; }

    private List<string> currencyList = new List<string>()
                {
            "RON",
            "EUR",
            "GBP",
            "USD"
        };

    private Payment payment = new Payment();

    HttpClient httpClient = new HttpClient()
    {
        BaseAddress = new Uri("http://localhost:5000")
    };

    protected async Task<string> GenerateId(int length)
    {
        string cypher = "123456789";

        var random = new Random();

        string generatedId = "";

        for (int i = 0; i < length; i++)
        {
            generatedId += cypher[random.Next(cypher.Length)];
        }

        return generatedId;
    }

    protected async Task Create()
    {
        payment.Amount = float.Parse(AmountToSend);
        payment.Id = Int32.Parse(await GenerateId(4));

        await httpClient.PostAsJsonAsync<Payment>("/api/payments", payment);
        NavManager.NavigateTo("payments");
    } }
