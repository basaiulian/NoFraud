@page "/forgotpassword"
@layout LoginLayout
@using BlazorPaymentManagementApp.Model
@using System.Timers
@using System.Net.Mail;
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager NavManager
@inject IJSRuntime JsRuntime

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css">

<div class="register-photo">
    <div class="form-container">
        <div class="image-holder"></div>
        <form method="post">
            <EditForm Model="@user" OnValidSubmit="ForgotUserPassword">
                
                <h2 class="text-center"><strong>Enter your email address</strong></h2>
                
                <div class="form-group">
                    <InputText id="email" class="form-control" placeholder="Email" @bind-Value="email" />
                </div>
                
                <div class="form-group">
                    <input class="btn btn-success btn-block" type="submit" value="Submit"><a class="already" href="/login"> Go back to Login !</a>
                </div>

            </EditForm>
        </form>
    </div>
    <h3>@message3</h3>
    <h4>@message4</h4>
</div>

@code{ private User user = new User();

    private static Timer aTimer;

    private string email { get; set; }

    private string message3 { get; set; }
    private string message4 { get; set; }

    HttpClient httpClient = new HttpClient()
    {
        BaseAddress = new Uri("http://localhost:5000")
    };

    protected async Task ForgotUserPassword()
    {
        var raspuns = await httpClient.PostAsJsonAsync<string>("/api/v1/users/sendemail", email);

        if (email != null)
        {

            if (raspuns.Content.ReadAsStringAsync().Result == "-1")
            {
                message4 = "Email not sent, please check your email address.";

            }
            else
            {
                message4 = "";
                message3 = "The email has been sent successfully, you will be redirected to the login page in 3 seconds...";
                aTimer = new Timer();
                aTimer.Interval = 2500;

                aTimer.Elapsed += (sender, args) =>
                {
                    NavManager.NavigateTo("/login", true);
                };

                aTimer.AutoReset = true;
                aTimer.Enabled = true;
            }
        }
        else
        {
            message4 = "The email specified is invalid !";
        }
    }

}
