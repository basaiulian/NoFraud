@page "/register"
@layout LoginLayout 
@using BlazorPaymentManagementApp.Model
@using System.Timers
@inject NavigationManager NavManager



<div class="register-photo">
    <div class="form-container">
        <div class="image-holder"></div>
        <form method="post">
            <EditForm Model="@user" OnValidSubmit="RegisterUser">
                <DataAnnotationsValidator />

                <h2 class="text-center"><strong>Create an account </strong> </h2>


                <div class="form-group">
                    <InputText id="username" class="form-control" placeholder="Username" @bind-Value="user.Username" />
                    <ValidationMessage For="@(() => user.Username)" />
                </div>
                <div class="form-group">
                    <InputText type="password" id="password" class="form-control" placeholder="Password" @bind-Value="user.Password" />
                    <ValidationMessage For="@(() => user.Password)" />
                </div>
                <div class="form-group">
                    <InputText id="email" class="form-control" placeholder="Email" @bind-Value="user.Email" />
                    <ValidationMessage For="@(() => user.Email)" />
                </div>
                <div class="form-group">
                    <InputText id="phoneNumber" class="form-control" placeholder="PhoneNumber" @bind-Value="user.PhoneNumber" />
                    <ValidationMessage For="@(() => user.PhoneNumber)" />
                </div>
                <div class="form-group">
                    <InputText type="password " id="address" class="form-control" placeholder="Address" @bind-Value="user.Address" />
                    <ValidationMessage For="@(() => user.Address)" />
                </div>

                <div class="form-group">
                    <input class="btn btn-success btn-block" type="submit" value="Submit" /><a class="already" href="/login">You already have an account? Login here.</a><h5>@message2</h5><h4>@message</h4>

                </div>


            </EditForm>
        </form>
    </div>
</div>



<p>@message</p>

@code{

    private User user = new User();
    private string message = "";
    private string message2 = "";

    private static Timer aTimer;

    HttpClient httpClient = new HttpClient()
    {
        BaseAddress = new Uri("http://localhost:5000")
    };

    protected async Task RegisterUser()
    {

        HttpResponseMessage response = await httpClient.PostAsJsonAsync<User>("/api/v1/users", user);

        if (response.StatusCode.ToString() == "Created")
        {
            message = "";
            message2 = "";
            message2 += " Contul a fost creat cu succes ! ";
        }
        else
        {
            message = "";
            message += " Contul exista deja ! ";
        }

        aTimer = new System.Timers.Timer();
        aTimer.Interval = 3000;

        // Hook up the Elapsed event for the timer.
        aTimer.Elapsed += (sender, args) =>
        {
            NavManager.NavigateTo("/Login");
        };

        // Have the timer fire repeated events (true is the default)
        aTimer.AutoReset = true;

        // Start the timer
        aTimer.Enabled = true;

    }

    //protected override async Task OnInitializedAsync()
    //{
    //   // users = await httpClient.GetFromJsonAsync<List<User>>("/api/users");
    //}


}

